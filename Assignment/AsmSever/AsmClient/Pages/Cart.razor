@page "/cart"
@using System.Net;
@using AsmShare.Models;
@using AsmShare.Models.ViewModels
@using Newtonsoft.Json
@inject IJSRuntime JSRuntime
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject Microsoft.Extensions.Configuration.IConfiguration config;
@inject NavigationManager NavigationManager
@layout WebLayOut;
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
@*<style>
    .gradient-custom {
/* fallback for old browsers */
background: #6a11cb;

/* Chrome 10-25, Safari 5.1-6 */
background: -webkit-linear-gradient(to right, rgba(106, 17, 203, 1), rgba(37, 117, 252, 1));

/* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
background: linear-gradient(to right, rgba(106, 17, 203, 1), rgba(37, 117, 252, 1))
}
</style>*@



<section class="h-100 gradient-custom">
    <div class="container py-5">
        <div class="row d-flex justify-content-center my-4">
            <div class="col-md-8">
                <div class="card mb-4">
                     <div class="card-header py-3">
                         <h5 class="mb-0">Giỏ Hàng Của Bạn</h5>
                     </div>
                      <div class="card-body">
                          <div class="row">
                              
                               
                          @{
                                @foreach (var item in giohang.ListViewCart)
                                {
                                    
                                    @if (item != null)
                                    {
                                        <div class="col-lg-3 col-md-12 mb-4 mb-lg-0">
                                           <div class="bg-image hover-overlay hover-zoom ripple rounded" data-mdb-ripple-color="light">
                                              <img src="@(imgUrl + item.MonAn.MonAn_Image)"  class="w-100"  />
                                                <a href="#!">
                                                  <div class="mask" style="background-color: rgba(251, 251, 251, 0.2)"></div>
                                                </a>
                                          </div>
                                      </div>
                                        <div class="col-lg-5 col-md-6 mb-4 mb-lg-0">
                                            <p><strong>@item.MonAn.MonAn_Name</strong></p>
                                            <p>Mô tả: @item.MonAn.MonAn_MoTa</p>
                                              <button type="button" class="btn btn-primary btn-sm me-1 mb-2" 
                                                href="javascript:return false;" @onclick="() => DeleteCart(item)" 
                                                    onmouseup="delCart(@item.MonAn.MonAn_Id)">
                                                <i class="zmdi zmdi-delete"></i>
                                              </button>
                                        </div>
                                        <div class="col-lg-4 col-md-6 mb-4 mb-lg-0">
                                              <div class="d-flex mb-4" style="max-width: 300px">
                                                   
                                                        <div class="form-outline">
                                                            <input type="number" min="0" id="txtQuantity_@item.MonAn.MonAn_Id"
                                                               @oninput="(e) => item.Quantity = int.Parse(e.Value.ToString())" 
                                                               @onchange="() => UpdateCart(item)" value="@item.Quantity" />
                                                            <label class="form-label" for="form1">Số Lượng</label>
                                                         </div>
                                                            
                                              </div>
                                               <p class="text-start text-md-center">
                                                <strong>@string.Format("{0:N0}",@item.MonAn.MonAn_Gia) VND</strong>
                                              </p>
                                         </div>
                                    }
                                     <hr class="my-4" />
                                }
                                
                          }
                          </div>
                      </div>
                </div>
            </div>
            <div class="col-md-4">
          <div class="card mb-4">
            <div class="card-header py-3">
              <h5 class="mb-0">Tóm Tắt</h5>
            </div>
            <div class="card-body">
              <ul class="list-group list-group-flush">
                <li
                  class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0">
                  Tổng Tiền
                  <span>@string.Format("{0:N0}",@giohang.Tongtien) VND</span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                  Phí Vận Chuyển
                  <span>Miễn Phí</span>
                </li>
                <li
                  class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3">
                  <div>
                    <strong>Tổng cộng</strong>
                    <strong>
                      <p class="mb-0">(bao gồm VAT 10%)</p>
                    </strong>
                  </div>
                  <span><strong>@string.Format("{0:N0}",@tongtiendavat) VND</strong></span>
                </li>
              </ul>
                @if (@emailAddress != null && @emailAddress != "")
                {
                    <div>
                        <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                  Địa chỉ giao hàng :
                  <span><input @bind="diachi" placeholder="địa chỉ giao hàng"/></span>
                </li>
                         
                   </div>
                   
                    <button  @onclick="OrderCart" class="btn btn-primary btn-lg btn-block">
                        <div>

                        </div>
                         Đặt Hàng
                    </button>
                }
                else
                {
                    <span>Bạn cần đăng nhập để đặt hàng</span>
                }
              
            </div>
          </div>
        </div>
        </div>
    </div>
</section>

@code {
    private string emailAddress;
    public AsmShare.Models.ViewModels.Cart giohang;
    private double total = 0;
    protected string imgUrl = "";
    protected string temp = "";
    private double tongtiendavat = 0;
    private string diachi;

    protected override async Task OnInitializedAsync()
    {
        emailAddress = sessionStorage.GetItem<string>("Email");//get key cart
        var cart = sessionStorage.GetItem<string>("cart");//get key cart

        if (cart == null)
        {
            giohang = new AsmShare.Models.ViewModels.Cart();
        }
        else
        {
            giohang = JsonConvert.DeserializeObject<AsmShare.Models.ViewModels.Cart>(cart);
        }
        tongtiendavat = giohang.Tongtien + giohang.Tongtien * 0.1;
        imgUrl = config.GetSection("API")["ImgUrl"].ToString();
    }

    private void UpdateCart(CartItem item)
    {
        item.Sotien = item.Quantity * item.MonAn.MonAn_Gia;

        giohang.Tongtien = Tinhtien(giohang.ListViewCart);
        sessionStorage.SetItem("cart", JsonConvert.SerializeObject(giohang));

    }

    private void DeleteCart(CartItem item)
    {
        giohang.ListViewCart.Remove(item);
        giohang.Tongtien = Tinhtien(giohang.ListViewCart);
        sessionStorage.SetItem("cart", JsonConvert.SerializeObject(giohang));
    }

    private async Task OrderCart()
    {

        var apiUrl = config.GetSection("API")["APIUrl"].ToString();
        imgUrl = config.GetSection("API")["ImgUrl"].ToString();
        var accessToken = sessionStorage.GetItem<string>("AccessToken");
        var khachhangId = sessionStorage.GetItem<int>("KhachhangId");
        var khachhangemai = sessionStorage.GetItem<string>("Email");
        var khachhangnames = sessionStorage.GetItem<string>("KhachhangName");
        var khachhangsdt = sessionStorage.GetItem<string>("KhachhangSdt");
        giohang.KhanghangId = khachhangId;
        giohang.KhachHangEmail = khachhangemai;
        giohang.KhachhangName = khachhangnames;
        giohang.KhachHangSdt = khachhangsdt;
        giohang.KhachHangDiachi = diachi;
        using (var client = new HttpClient())
        {
            client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
            StringContent content = new StringContent(JsonConvert.SerializeObject(giohang), System.Text.Encoding.UTF8, "application/json");
            client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
            HttpResponseMessage response = await client.PostAsync(apiUrl + "Cart", content);

            if (response.StatusCode != HttpStatusCode.OK)
            {
                //error += (error == "" ? "" : "<br/>") + " - Lỗi khi gọi API.";
                //xu ly loi
                //return Content(response.ToString());
            }
            else
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                if (apiResponse == "-1")
                {

                }
                else // luu thanh cong
                {
                    sessionStorage.RemoveItem("cart");
                    await JSRuntime.InvokeAsync<object>("clearCart", "");
                    NavigationManager.NavigateTo("/history");
                }
            }
        }
    }
    
    private float Tinhtien(List<CartItem> listCart)
    {
        float tongtien = 0;

        if (listCart != null)
        {
            for (int i = 0; i < listCart.Count; i++)
            {
                tongtien += listCart[i].Sotien;
            }

        }
       
         tongtiendavat = tongtien + tongtien * 0.1;
        return tongtien;
       
    }

}
